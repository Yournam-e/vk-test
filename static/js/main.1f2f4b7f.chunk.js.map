{"version":3,"sources":["panels/Home.js","img/persik.png","panels/Persik.js","panels/pageS.js","panels/about.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","header","mode","before","photo_200","src","description","city","title","first_name","last_name","country","stretched","size","onClick","Persik","props","left","className","persik","alt","pageS","style","height","about","useState","todos","setTodos","useEffect","fetchData","a","fetch","response","json","data","console","log","map","todo","App","scheme","setScheme","activePanel","setActivePanel","setUser","popout","setPopout","bridge","send","user","subscribe","detail","type","e","currentTarget","dataset","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f2f4b7f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\n\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Не пример2</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group header={<Header mode=\"secondary\">User Data Fetched with VK Bridge</Header>}>\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t\t<Cell>Мне кажется ты живешь  в {fetchedUser.country.title} </Cell>\n\t\t\t<Button stretched size=\"l\"  onClick={go} data-to=\"pageS\">\n\t\t\t\t\tShow me all money, please\n\t\t\t\t</Button>\n\t\t</Group>}\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persika, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tcountry: PropTypes.string.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/persik.ae9f0072.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, PanelHeaderBack } from '@vkontakte/vkui';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, Button, PanelHeaderBack, Div, CardGrid, Card} from '@vkontakte/vkui';\r\n\r\nimport './pageS.css'\r\n\r\n\r\n\r\nconst pageS = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n\t\t>\r\n\t\t\tЯ взял лут и вышел!\r\n\t\t</PanelHeader>\r\n\t\t<Div>\r\n\t\t\t<Button stretched size=\"l\"> Show me the Persik, please </Button>\r\n\t\t</Div>\r\n\r\n\t\t<Div> \r\n\t\t<CardGrid size=\"l\">\r\n          <Card onClick={props.go} data-to=\"about\" className=\"parent\" mode=\"outline\">\r\n            <div style={{ height: 64 }} />\r\n\t\t\t<Button className='child' size=\"s\"> ты же хочешь нажать?</Button>\r\n\t\t\t\r\n          </Card>\r\n        </CardGrid>\r\n\t\t</Div>\r\n\t\t\r\n\t</Panel>\r\n);\r\n\r\npageS.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default pageS;","import {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Panel, PanelHeader, Button, PanelHeaderBack, Div, CardGrid, Card, Cell} from '@vkontakte/vkui';\r\n\r\n\r\n\r\n\r\nconst about = props => {\r\n\r\n\r\n\r\n\tconst [todos, setTodos] = useState([])\r\n\r\n\tuseEffect(() =>{\r\n\t\t\r\n\t\tconst fetchData = async() =>{\r\n\t\ttry{\r\n\r\n\t\t\tconst response = await fetch('https://jsonplaceholder.typicode.com/todos')\r\n\t\t\tconst data = await response.json()\r\n\r\n\t\t\tsetTodos(data)\r\n\r\n\t\t}catch(error){\r\n\t\t\tconsole.log(error)\r\n\r\n\t\t}\r\n\t\t\r\n\t\t}\r\n\r\n\t\tfetchData()\r\n\r\n\t}, [])\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderBack onClick={props.go} data-to=\"home\"/>}\r\n\t\t>\r\n            Тутоирал\r\n\t\t</PanelHeader>\r\n\t\t\r\n\t\t<Div> \r\n\t\t<CardGrid size=\"l\">\r\n\r\n\t\t{todos.map((todo) =>{\r\n        return (\r\n          <Card onClick={props.go} data-to=\"pageS\" className=\"parent\" mode=\"outline\"> \r\n\t\t  \t<div style={{ height: 64 }} />\r\n\t\t    <Button className='child' size=\"s\">{todo.title}</Button>\r\n\t\t  </Card>\r\n        )\r\n      \t})}\r\n          <Card onClick={props.go} data-to=\"pageS\" className=\"parent\" mode=\"outline\">\r\n            <div style={{ height: 64 }} />\r\n\t\t\t<Button className='child' size=\"s\"> ты же хочешь нажать?</Button>\r\n\t\t\t\r\n          </Card>\r\n\r\n          <Card onClick={props.go} data-to=\"pageS\" className=\"parent\" mode=\"outline\">\r\n            <div style={{ height: 72 }} />\r\n\t\t\t<Button className='child' size=\"s\"> Нет?</Button>\r\n            <Cell> ДА ну?</Cell>\r\n\t\t\t\r\n          </Card>\r\n\r\n          <Card onClick={props.go} data-to=\"pageS\" className=\"parent\" mode=\"outline\">\r\n            <div style={{ height: 72 }} />\r\n\t\t\t<Button className='child' size=\"s\"> ок айм го</Button>\r\n\t\t\t\r\n          </Card>\r\n        </CardGrid>\r\n\t\t</Div>\r\n\t\t\r\n\t</Panel>\r\n\r\n\t);\r\n\r\n\r\n}\r\n\r\nabout.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default about;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport PageS from './panels/pageS';\nimport About from './panels/about';\n\n\nconst App = () => {\n\tconst [scheme, setScheme] = useState('bright_light')  //тема\n\tconst [activePanel, setActivePanel] = useState('home'); \n\tconst [fetchedUser, setUser] = useState(null); //данные юзера\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />); // progress Bar\n\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tsetScheme(data.scheme)\n\t\t\t}\n\t\t});\n\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tawait setUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\n\t\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}> //тема\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t\t\t\t<PageS id='pageS' go={go} />\n\t\t\t\t\t\t\t\t<About id='about' go={go} />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}